{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","href","aboutText","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","backgroundColor","heading","value","onChange","event","target","rows","color","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51f4b257.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" to=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Dropdown\r\n              </a>\r\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                <li><a className=\"dropdown-divider\" /></li>\r\n                \r\n              </ul>\r\n            </li>\r\n          </ul>\r\n          {/*<form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n  </form>*/}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className =\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About text'\r\n}","import PropTypes from 'prop-types'\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\", \"Success\");\r\n  };\r\n\r\n  const handleClickLow = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\", \"Success\");\r\n  };\r\n\r\n  const handleClickclear = () => {\r\n    let newText = ('');\r\n    setText(newText);\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n \r\n\r\n\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  //setText(\"New Text\");\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{backgroundColor:props.mode==='dark'?'white':'grey' }} >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"3\" style={{backgroundColor:props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'grey'}} ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleClick}> Convert to uppercase</button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleClickLow}> Convert to Lowercase</button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleClickclear}>Clear</button>\r\n      </div>\r\n      <div className=\"container\" my-3 style={{backgroundColor:props.mode==='dark'?'white':'grey'}} >\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length}characters </p>\r\n      </div>\r\n      \r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\n//import About from \"./components/About\";\nimport Navbar from \"./components/Navbar.js\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\n{/*\nimport {\n  BrowserRouter as Router, \n  Switch, \n  Route, \n  Link\n} from \"react-router-dom\";\n*/}\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\");\n    }\n  }\n\n  return (\n    <>\n      {/*<Navbar title=\"Textutils\" aboutText=\"About Textutils\"/>*/}\n      {/*<Router>*/}\n      <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container\">\n      {/*<Switch>*/}\n    {/* /users --> Component 1\n        /users/home --> Component 2\n        exact is used for nore preciseness */}\n         {/*} <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          </Route>\n      */}\n    {/*</Switch>*/}\n        <TextForm showAlert={showAlert} heading=\"Enter the text here to analyze\" mode={mode} />\n        </div>\n      \n      {/*</Router>*/}\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}